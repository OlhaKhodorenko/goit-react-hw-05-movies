{"version":3,"file":"static/js/297.71289fd1.chunk.js","mappings":"8OAGaA,EAAUC,EAAAA,GAAAA,IAAH,wOASPC,EAAgBD,EAAAA,GAAAA,IAAH,yCAIbE,EAAyBF,EAAAA,GAAAA,IAAH,iGAgBtBG,IAXOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,oMAWKA,EAAAA,GAAAA,OAAH,oM,mBC2CnB,EAhEuB,WAAO,IAAD,IACnBK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBR,GAASS,KAAKL,KAC/B,CAACJ,KAECG,EACH,OAAO,KAET,IACEO,EAMEP,EANFO,eACAC,EAKER,EALFQ,aACAC,EAIET,EAJFS,aACAC,EAGEV,EAHFU,SACAC,EAEEX,EAFFW,OACAC,EACEZ,EADFY,YAGIC,EAAU,oBAAGX,EAASY,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE3C,OACE,6BACE,0BACE,SAAC,KAAD,CAAMC,GAAIH,EAAV,UACE,UAAClB,EAAD,YACE,SAAC,MAAD,IADF,kBAMJ,UAACJ,EAAD,YACE,gBACE0B,IAAKjB,GAAS,0CAAuCY,GACrDM,IAAKX,KAEP,UAACd,EAAD,YACE,0BACGc,EADH,IACoBC,EAAaW,MAAM,EAAG,GAD1C,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfZ,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,cAG7C,UAAC/B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMsB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,SAAT,6BAIN,SAAC,KAAD,S,yMClEN,EALiB,CACfU,SAAU,+BACVC,IAAK,oCCCCA,EAAkBC,EAAAA,IAAbF,EAAaE,EAAAA,SAEbC,EAAW,mCAAG,WAAMC,GAAN,uFACFC,IAAAA,IAAA,UAClBL,EADkB,uCACqBC,IAFnB,cACnBK,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOXC,EAAe,mCAAG,WAAOC,GAAP,4FAAoBL,EAApB,+BAA2B,EAA3B,SACHC,IAAAA,IAAA,UACrBL,EADqB,iCACYC,EADZ,gCACuCG,EADvC,kBACqDK,IAFlD,cACvBC,EADuB,yBAItBA,EAAYH,KAAKI,SAJK,2CAAH,sDAOfhC,EAAiB,mCAAG,WAAMiC,GAAN,uFACJP,IAAAA,IAAA,UACtBL,EADsB,kBACJY,EADI,oBACUX,EADV,oBADI,cACzBY,EADyB,yBAIxBA,EAAaN,MAJW,2CAAH,sDAOjBO,EAAiB,mCAAG,WAAMF,GAAN,uFACPP,IAAAA,IAAA,UACnBL,EADmB,kBACDY,EADC,4BACqBX,EADrB,oBADO,cACzBc,EADyB,yBAIxBA,EAAUR,KAAKS,MAJS,2CAAH,sDAOjBC,EAAY,mCAAG,WAAML,GAAN,uFACAP,IAAAA,IAAA,UACrBL,EADqB,kBACHY,EADG,4BACmBX,EADnB,2BADA,cACpBiB,EADoB,yBAInBA,EAAYX,KAAKI,SAJE,2CAAH","sources":["pages/MovieDetailes.styled.js","pages/MoviesDetailes.jsx","service/settings.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  border-bottom: 1px solid #0000003d;\n  box-shadow: rgba(0, 0, 0, 0.09) 0px 2px 1px;\n  padding-bottom: 10px;\n`;\nexport const InfoContainer = styled.div`\n  margin: 16px;\n`;\n\nexport const AdditonalInfoContainer = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.09) 0px 2px 1px;\n  padding-bottom: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px 10px 0;\n  text-decoration: underline;\n  color: black;\n  font-weight: 700;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const Button = styled.button`\n  margin: 8px;\n  background-color: #f5f5f5;\n  border: 1px solid #80808085;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &.hover {\n    background-color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\nimport {\n  Wrapper,\n  Button,\n  InfoContainer,\n  AdditonalInfoContainer,\n} from './MovieDetailes.styled';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nconst MoviesDetailes = () => {\n  const { movieId } = useParams();\n  const [movieCard, setMovieCard] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovieCard);\n  }, [movieId]);\n\n  if (!movieCard) {\n    return null;\n  }\n  const {\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n  } = movieCard;\n\n  const toBackLink = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <nav>\n        <Link to={toBackLink}>\n          <Button>\n            <BsArrowLeft />\n            Go back\n          </Button>\n        </Link>\n      </nav>\n      <Wrapper>\n        <img\n          src={movieCard && `https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={original_title}\n        />\n        <InfoContainer>\n          <h2>\n            {original_title}({release_date.slice(0, 4)})\n          </h2>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres.map(genre => genre.name).join(',')}</p>\n        </InfoContainer>\n      </Wrapper>\n      <AdditonalInfoContainer>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"review\">Review</Link>\n          </li>\n        </ul>\n      </AdditonalInfoContainer>\n      <Outlet />\n    </main>\n  );\n};\nexport default MoviesDetailes;\n","const settings = {\n  BASE_URL: 'https://api.themoviedb.org/3',\n  KEY: '33da1ae0687d870981cf19ad4813876b',\n};\n\nexport default settings;\n","import axios from 'axios';\nimport settings from './settings';\n\nconst { KEY, BASE_URL } = settings;\n\nexport const getTrending = async page => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieByQuery = async (searchQuery, page = 1) => {\n  const foundMovies = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&query=${searchQuery}`\n  );\n  return foundMovies.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const movieDetails = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return movieDetails.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const movieCast = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return movieCast.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const movieReview = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return movieReview.data.results;\n};\n"],"names":["Wrapper","styled","InfoContainer","AdditonalInfoContainer","Button","NavLink","movieId","useParams","useState","movieCard","setMovieCard","location","useLocation","useEffect","fetchMovieDetails","then","original_title","release_date","vote_average","overview","genres","poster_path","toBackLink","state","from","to","src","alt","slice","Math","round","map","genre","name","join","BASE_URL","KEY","settings","getTrending","page","axios","response","data","getMovieByQuery","searchQuery","foundMovies","results","id","movieDetails","fetchMovieCredits","movieCast","cast","fetchReviews","movieReview"],"sourceRoot":""}